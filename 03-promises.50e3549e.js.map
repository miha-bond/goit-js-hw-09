{"mappings":"oeAAAA,EAAA,S","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport flatpickr from 'flatpickr';\n// ++++++++++++++++++++++++++++++++++++++++++\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n// -------------------------------------------\n// ===========================================\n\n//todo Завдання 3 - генератор промісів\n//? Виконуй це завдання у файлах 03-promises.html і 03-promises.js. Подивися демо-відео роботи генератора промісів.\n//\n// HTML містить розмітку форми, в поля якої користувач буде вводити першу затримку в мілісекундах, крок збільшення затримки для кожного промісу після першого і кількість промісів, яку необхідно створити.\n//\n//*      <form class=\"form\">\n//*        <label>\n//*         First delay (ms)\n//*         <input type=\"number\" name=\"delay\" required />\n//*        </label>\n//*        <label>\n//*         Delay step (ms)\n//*         <input type=\"number\" name=\"step\" required />\n//*        </label>\n//*        <label>\n//*         Amount\n//*         <input type=\"number\" name=\"amount\" required />\n//*       </label>\n//*       <button type=\"submit\">Create promises</button>\n//*      </form>\n//\n//? Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n//\n//*      function createPromise(position, delay) {\n//*       const shouldResolve = Math.random() > 0.3;\n//*       if (shouldResolve) {\n//*               Fulfill;\n//*       } else {\n//*              Reject;\n//*       }\n//*      }\n//\n//? Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n//\n//*      createPromise(2, 1500)\n//*      .then(({ position, delay }) => {\n//*         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//*      })\n//*      .catch(({ position, delay }) => {\n//*         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//*      });\n//\n//! Бібліотека повідомлень\n//! УВАГА\n//? Наступний функціонал не обов'язковий для здавання завдання, але буде хорошою додатковою практикою.\n//\n//? Для відображення повідомлень користувачеві, замість console.log(), використовуй бібліотеку notiflix https://github.com/notiflix/Notiflix#readme.\n//\n"],"names":["parcelRequire"],"version":3,"file":"03-promises.50e3549e.js.map"}