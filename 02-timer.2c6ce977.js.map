{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAKA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,oBAC9BC,SAAUF,SAASC,cAAc,gBACjCE,KAAMH,SAASC,cAAc,eAC7BG,MAAOJ,SAASC,cAAc,gBAC9BI,QAASL,SAASC,cAAc,kBAChCK,QAASN,SAASC,cAAc,mBAGlCH,EAAKI,SAASK,UAAW,EAEzB,MAAMC,EAAmB,CACvBC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACN,IAAIC,EAAeD,EAAc,GAAGE,UAAYL,KAAKM,MAErD,GADAC,QAAQC,IAAIJ,GACRA,GAAgB,EAClB,OAAOpB,EAAAyB,OAAOC,QAAQ,8BAEtBxB,EAAKI,SAASK,UAAW,EACzBT,EAAKI,SAASqB,iBAAiB,SAAS,KACtCzB,EAAKI,SAASK,UAAW,EACzBX,EAAAyB,OAAOG,KAAK,iBACA,IAARC,EAAaC,aAAY,KAC3B,MAAMC,EAAYZ,EAAc,GAAGE,UAAYL,KAAKM,MAC9CU;AAiBhB,SAAmBC,GAEjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGN7B,EAAO+B,KAAKC,MAAMN,EAAKI,GAEvB7B,EAAQ8B,KAAKC,MAAMN,EAAMI,EAAOD,GAEhC3B,EAAU6B,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAE3CzB,EAAU4B,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAE3B,E,MAAMC,E,QAAOC,E,QAASC,GAjCF8B,CAAUT,GAK/B,GAJA7B,EAAKK,KAAKkC,YAAcC,EAAeV,EAAazB,MACpDL,EAAKM,MAAMiC,YAAcC,EAAeV,EAAaxB,OACrDN,EAAKO,QAAQgC,YAAcC,EAAeV,EAAavB,SACvDP,EAAKQ,QAAQ+B,YAAcC,EAAeV,EAAatB,SACnDqB,GAAa,IAEf,OADAY,cAAcd,GACP7B,EAAAyB,OAAOmB,QAAQ,sBAEvB,UA2BX,SAASF,EAAeG,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG;;;;;;;;CAtBnC,EAAAC,EAAAC,SAAU/C,EAAKC,MAAOS","sources":["src/js/02-timer.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nrequire('flatpickr/dist/themes/material_blue.css');\n// +++++++++++++++++++++++++++++++++++++++++++++++\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n// ------------------------------------------------\nrefs.startBtn.disabled = true;\n//\nconst optionsFlatpickr = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    let selectedDate = selectedDates[0].getTime() - Date.now();\n    console.log(selectedDate);\n    if (selectedDate <= 0) {\n      return Notify.failure('Виберіть час в майбутньому');\n    } else {\n      refs.startBtn.disabled = false;\n      refs.startBtn.addEventListener('click', () => {\n        refs.startBtn.disabled = true;\n        Notify.info('Відлік почато');\n        let intervalId = setInterval(() => {\n          const deltaTime = selectedDates[0].getTime() - Date.now();\n          const reverseTimer = convertMs(deltaTime);\n          refs.days.textContent = addLeadingZero(reverseTimer.days);\n          refs.hours.textContent = addLeadingZero(reverseTimer.hours);\n          refs.minutes.textContent = addLeadingZero(reverseTimer.minutes);\n          refs.seconds.textContent = addLeadingZero(reverseTimer.seconds);\n          if (deltaTime <= 500) {\n            clearInterval(intervalId);\n            return Notify.success('Відлік закінчено');\n          }\n        }, 1000);\n      });\n    }\n  },\n};\n//------------------------------------------------\nflatpickr(refs.input, optionsFlatpickr); //! flatpickr\n// -----------------------------------------------\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n// -------------------------------------------------\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n// ------------------------------------------------\n// ================================================\n//todo Завдання 2 - таймер зворотного відліку\n//? Виконуй це завдання у файлах 02-timer.html і 02-timer.js. Напиши скрипт таймера, який здійснює зворотний відлік до певної дати. Такий таймер може використовуватися у блогах та інтернет-магазинах, сторінках реєстрації подій, під час технічного обслуговування тощо. Подивися демо-відео роботи таймера.\n//\n//? Елементи інтефрейсу\n// HTML містить готову розмітку таймера, поля вибору кінцевої дати і кнопку, по кліку на яку, таймер повинен запускатися. Додай мінімальне оформлення елементів інтерфейсу.\n//\n//*      <input type=\"text\" id=\"datetime-picker\" /> */}\n//*      <button type=\"button\" data-start>Start</button> */}\n//\n//*      <div class=\"timer\"> */}\n//*       <div class=\"field\"> */}\n//*         <span class=\"value\" data-days>00</span> */}\n//*         <span class=\"label\">Days</span> */}\n//*       </div> */}\n//*       <div class=\"field\"> */}\n//*         <span class=\"value\" data-hours>00</span> */}\n//*         <span class=\"label\">Hours</span> */}\n//*       </div> */}\n//*       <div class=\"field\"> */}\n//*         <span class=\"value\" data-minutes>00</span> */}\n//*         <span class=\"label\">Minutes</span> */}\n//*       </div> */}\n//*       <div class=\"field\"> */}\n//*         <span class=\"value\" data-seconds>00</span> */}\n//*         <span class=\"label\">Seconds</span> */}\n//*       </div> */}\n//*      </div> */}\n//\n//! Бібліотека flatpickr\n//? Використовуй бібліотеку flatpickr https://flatpickr.js.org/ для того, щоб дозволити користувачеві кросбраузерно вибрати кінцеву дату і час в одному елементі інтерфейсу. Для того щоб підключити CSS код бібліотеки в проект, необхідно додати ще один імпорт, крім того, що описаний в документації.\n//\n//? Описаний в документації\n//? import flatpickr from \"flatpickr\";\n//? Додатковий імпорт стилів\n//? import \"flatpickr/dist/flatpickr.min.css\";\n//?\n//? Бібліотека очікує, що її ініціалізують на елементі input[type=\"text\"], тому ми додали до HTML документу поле input#datetime-picker.\n//\n//* <input type=\"text\" id=\"datetime-picker\" />\n//\n//? Другим аргументом функції flatpickr(selector, options) можна передати необов'язковий об'єкт параметрів. Ми підготували для тебе об'єкт, який потрібен для виконання завдання. Розберися, за що відповідає кожна властивість в документації «Options», і використовуй його у своєму коді.\n//\n//* const options = {\n//* enableTime: true,\n//* time_24hr: true,\n//* defaultDate: new Date(),\n//* minuteIncrement: 1,\n//* onClose(selectedDates) {\n//*   console.log(selectedDates[0]);\n//*  },\n//* };\n//\n//! Вибір дати\n//? Метод onClose() з об'єкта параметрів викликається щоразу під час закриття елемента інтерфейсу, який створює flatpickr. Саме у ньому варто обробляти дату, обрану користувачем. Параметр selectedDates - це масив обраних дат, тому ми беремо перший елемент.\n//\n//? Якщо користувач вибрав дату в минулому, покажи window.alert() з текстом \"Please choose a date in the future\".\n//? Якщо користувач вибрав валідну дату (в майбутньому), кнопка «Start» стає активною.\n//? Кнопка «Start» повинна бути неактивною доти, доки користувач не вибрав дату в майбутньому.\n//? Натисканням на кнопку «Start» починається відлік часу до обраної дати з моменту натискання.\n//! Відлік часу\n//? Натисканням на кнопку «Start» скрипт повинен обчислювати раз на секунду, скільки часу залишилось до вказаної дати, і оновлювати інтерфейс таймера, показуючи чотири цифри: дні, години, хвилини і секунди у форматі xx:xx:xx:xx.\n//? Кількість днів може складатися з більше, ніж двох цифр.\n//? Таймер повинен зупинятися, коли дійшов до кінцевої дати, тобто 00:00:00:00.\n//! НЕ БУДЕМО УСКЛАДНЮВАТИ\n//? Якщо таймер запущений, для того щоб вибрати нову дату і перезапустити його - необхідно перезавантажити сторінку.\n//? Для підрахунку значень використовуй готову функцію convertMs, де ms - різниця між кінцевою і поточною датою в мілісекундах.\n//\n//* function convertMs(ms) {\n//*   Number of milliseconds per unit of time\n//*   const second = 1000;\n//*   const minute = second * 60;\n//*   const hour = minute * 60;\n//*   const day = hour * 24;\n//*\n//*   Remaining days\n//*    const days = Math.floor(ms / day);\n//*   Remaining hours\n//*    const hours = Math.floor((ms % day) / hour);\n//*   Remaining minutes\n//*    const minutes = Math.floor(((ms % day) % hour) / minute);\n//*   Remaining seconds\n//*    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n//*\n//*  return { days, hours, minutes, seconds };\n//* }\n//\n//* console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n//* console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n//* console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n//\n//! Форматування часу\n//? Функція convertMs() повертає об'єкт з розрахованим часом, що залишився до кінцевої дати. Зверни увагу, що вона не форматує результат. Тобто, якщо залишилося 4 хвилини або будь-якої іншої складової часу, то функція поверне 4, а не 04. В інтерфейсі таймера необхідно додавати 0, якщо в числі менше двох символів. Напиши функцію addLeadingZero(value), яка використовує метод padStart() і перед рендерингом інтефрейсу форматує значення.\n//\n//! Бібліотека повідомлень\n//! УВАГА\n//? Наступний функціонал не обов'язковий для здавання завдання, але буде хорошою додатковою практикою.\n//\n//? Для відображення повідомлень користувачеві, замість window.alert(), використовуй бібліотеку notiflix https://github.com/notiflix/Notiflix#readme.\n//\n"],"names":["$iQIUW","parcelRequire","$40d383fb392a7037$var$refs","input","document","querySelector","startBtn","days","hours","minutes","seconds","disabled","$40d383fb392a7037$var$optionsFlatpickr","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","selectedDate","getTime","now","console","log","Notify","failure","addEventListener","info","intervalId","setInterval","deltaTime","reverseTimer","ms","second","minute","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","textContent","$40d383fb392a7037$var$addLeadingZero","clearInterval","success","value","String","padStart","$fbklV","default"],"version":3,"file":"02-timer.2c6ce977.js.map"}